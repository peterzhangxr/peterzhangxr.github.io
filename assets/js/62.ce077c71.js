(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{459:function(t,a,s){"use strict";s.r(a);var e=s(55),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vuex面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex面试题"}},[t._v("#")]),t._v(" Vuex面试题")]),t._v(" "),s("h2",{attrs:{id:"在vuex中使用mutation要注意什么。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在vuex中使用mutation要注意什么。"}},[t._v("#")]),t._v(" 在Vuex中使用mutation要注意什么。")]),t._v(" "),s("p",[t._v("mutation 必须是同步函数")]),t._v(" "),s("h2",{attrs:{id:"vuex中action和mutation有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex中action和mutation有什么区别"}},[t._v("#")]),t._v(" Vuex中action和mutation有什么区别？")]),t._v(" "),s("ul",[s("li",[t._v("action 提交的是 mutation，而不是直接变更状态。mutation可以直接变更状态。")]),t._v(" "),s("li",[t._v("action 可以包含任意异步操作。mutation只能是同步操作。")]),t._v(" "),s("li",[t._v("提交方式不同，action 是用this.$store.dispatch('ACTION_NAME',data)来提交。mutation是用this.$store.commit('SET_NUMBER',10)来提交。")]),t._v(" "),s("li",[t._v("接收参数不同，mutation第一个参数是state，而action第一个参数是context，其包含了")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 `store.state`，若在模块中则为局部状态")]),t._v("\n    rootState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 `store.state`，只存在于模块中")]),t._v("\n    commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 `store.commit`")]),t._v("\n    dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 `store.dispatch`")]),t._v("\n    getters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 `store.getters`")]),t._v("\n    rootGetters "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于 `store.getters`，只存在于模块中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"在模块中-getter和mutation接收的第一个参数state-是全局的还是模块的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在模块中-getter和mutation接收的第一个参数state-是全局的还是模块的"}},[t._v("#")]),t._v(" 在模块中，getter和mutation接收的第一个参数state，是全局的还是模块的？")]),t._v(" "),s("p",[t._v("第一个参数state是模块的state，也就是局部的state。")]),t._v(" "),s("h2",{attrs:{id:"在模块中-getter和mutation和action中怎么访问全局的state和getter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在模块中-getter和mutation和action中怎么访问全局的state和getter"}},[t._v("#")]),t._v(" 在模块中，getter和mutation和action中怎么访问全局的state和getter？")]),t._v(" "),s("ul",[s("li",[t._v("在getter中可以通过第三个参数rootState访问到全局的state,可以通过第四个参数rootGetters访问到全局的getter。")]),t._v(" "),s("li",[t._v("在mutation中不可以访问全局的satat和getter，只能访问到局部的state。")]),t._v(" "),s("li",[t._v("在action中第一个参数context中的context.rootState访问到全局的state，context.rootGetters访问到全局的getter。")])]),t._v(" "),s("h2",{attrs:{id:"用过vuex模块的命名空间吗-为什么使用-怎么使用。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用过vuex模块的命名空间吗-为什么使用-怎么使用。"}},[t._v("#")]),t._v(" 用过Vuex模块的命名空间吗？为什么使用，怎么使用。")]),t._v(" "),s("p",[t._v("默认情况下，模块内部的action、mutation和getter是注册在全局命名空间，如果多个模块中action、mutation的命名是一样的，那么提交mutation、action时，将会触发所有模块中命名相同的mutation、action。")]),t._v(" "),s("p",[t._v("这样有太多的耦合，如果要使你的模块具有更高的封装度和复用性，你可以通过添加namespaced: true 的方式使其成为带命名空间的模块。")]),t._v(" "),s("h2",{attrs:{id:"怎么在带命名空间的模块内提交全局的mutation和action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么在带命名空间的模块内提交全局的mutation和action"}},[t._v("#")]),t._v(" 怎么在带命名空间的模块内提交全局的mutation和action？")]),t._v(" "),s("p",[t._v("将 { root: true } 作为第三参数传给 dispatch 或 commit 即可。")]),t._v(" "),s("h2",{attrs:{id:"怎么在带命名空间的模块内注册全局的action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么在带命名空间的模块内注册全局的action"}},[t._v("#")]),t._v(" 怎么在带命名空间的模块内注册全局的action？")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("actions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("actionA")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"怎么使用mapstate-mapgetters-mapactions和mapmutations这些函数来绑定带命名空间的模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么使用mapstate-mapgetters-mapactions和mapmutations这些函数来绑定带命名空间的模块"}},[t._v("#")]),t._v(" 怎么使用mapState，mapGetters，mapActions和mapMutations这些函数来绑定带命名空间的模块？")]),t._v(" "),s("p",[t._v("首先使用createNamespacedHelpers创建基于某个命名空间辅助函数")]),t._v(" "),s("h2",{attrs:{id:"vuex插件有用过吗-怎么用简单介绍一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex插件有用过吗-怎么用简单介绍一下"}},[t._v("#")]),t._v(" Vuex插件有用过吗？怎么用简单介绍一下？")]),t._v(" "),s("p",[t._v("Vuex插件就是一个函数，它接收 store 作为唯一参数。在Vuex.Store构造器选项plugins引入。 在store/plugin.js文件中写入")]),t._v(" "),s("h2",{attrs:{id:"在vuex插件中怎么监听组件中提交mutation和action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在vuex插件中怎么监听组件中提交mutation和action"}},[t._v("#")]),t._v(" 在Vuex插件中怎么监听组件中提交mutation和action？")]),t._v(" "),s("ul",[s("li",[t._v("用Vuex.Store的实例方法subscribe监听组件中提交mutation")]),t._v(" "),s("li",[t._v("用Vuex.Store的实例方法subscribeAction监听组件中提交action 在store/plugin.js文件中写入")])])])}),[],!1,null,null,null);a.default=n.exports}}]);